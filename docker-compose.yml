services:

  database:
    image: postgres:alpine
    environment:
      POSTGRES_DB: "otz"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - otz

  redis:
    image: redis:alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - otz

  # patient-service:
  #   build:
  #     context: ./server/Patient
  #     dockerfile: Dockerfile
  #   image: patient-image
  #   volumes:
  #     - ./server/Patient/:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - 5001:5001
  #   depends_on:
  #     - database
  #   networks:
  #     - otz

  vitalsigns-service:
    build:
      context: ./server/VitalSigns
      dockerfile: Dockerfile
    image: vitalsigns-image
    # restart: always
    volumes:
      - ./server/VitalSigns/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5002:5002
    depends_on:
      - database
    networks:
      - otz

  enrollment-service:
    build:
      context: ./server/Enrollment
      dockerfile: Dockerfile
    image: enrollment-image
    # restart: always
    volumes:
      - ./server/Enrollment/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5003:5003
    depends_on:
      - database
    networks:
      - otz


  root-service:
    # container_name: root-service-container
    build:
      context: ./server
      dockerfile: Dockerfile
    image: root-image
    # restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/user/getAll"]
      interval: 30s
      timeout: 15s
      retries: 5
      # start_period: 30s
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5000:5000
    depends_on:
      - database
      - redis
      # - kafka-2
    networks:
      - otz
    environment:
      REDIS_HOST: redis

  school-service:
    build:
      context: ./server/School
      dockerfile: Dockerfile
    image: school-image
    # restart: always
    volumes:
      - ./server/School:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5004:5004
    depends_on:
      - database
      # - kafka-2
    networks:
      - otz


  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    image: otz-client
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    # restart: always
    # command: /usr/local/bin/start.sh web/server.js web
    ports:
      - "3000:3000"
    depends_on:
      - enrollment-service
      # - patient-service
      - school-service
      - vitalsigns-service
      - root-service    
    networks:
      - otz

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:8080"
    depends_on:
      - root-service
      - school-service
      - enrollment-service
      - vitalsigns-service
    networks:
      - otz



networks:
 otz:
  driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data: