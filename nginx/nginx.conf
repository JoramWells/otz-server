# this is a new cache zone, an area in memory that holds cache keys
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream users{
    server users:5001;
}


upstream articles{
    server articles:5009;
}

upstream notify {
    server notify:5008;
}


server {
    listen 8081;
    server_name 192.168.100.111;

    client_max_body_size 100M;

    # Handle file compression
    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

#    socket.io
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'Upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;

    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    send_timeout 300;

    proxy_buffers 8 32k;
    proxy_buffer_size 64k;
    proxy_busy_buffers_size 64k;

    proxy_set_header 'Access-Control-Allow-Origin' '*';

    # location / {
    #     proxy_pass http://client:3000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_cache_bypass $http_upgrade;
    # }


   location /public {
        alias ../src/Articles/uploads;
        # autoindex: on;
    }

    location /media {
        alias ../etl_webapp/media/csvs;
        # autoindex: on;
    }

    location /avatar {
        alias ../src/Users/uploads;
        # autoindex: on;
    }


    location /otz-modules {
        alias ../src/root/uploads;
        # autoindex: on;
    }
   
    location /api/root/ {
        rewrite ^/api/root(/.*) $1 break;
        proxy_pass http://root:5000/;

    }

    location /api/users/socket.io {
        # rewrite ^/api/pharmacy/socket.io(/.*) $1 break;
        proxy_pass http://users/socket.io/;


     }
    
    location /api/users/ {
        rewrite ^/api/users(/.*) $1 break;
        proxy_pass http://users;

    }

    location /api/lab/ {
        rewrite ^/api/lab(/.*) $1 break;
        proxy_pass http://lab:5002/;

    }

     location /api/pharmacy/socket.io {
        # rewrite ^/api/pharmacy/socket.io(/.*) $1 break;
        proxy_pass http://pharmacy:5003/socket.io/;

     }

    location /api/pharmacy/ {
        rewrite ^/api/pharmacy(/.*) $1 break;
        proxy_pass http://pharmacy:5003/;

     }

    # location /api/school/ {
    #     rewrite ^/api/school(/.*) $1 break;
    #     proxy_pass http://school:5004/;
    #     proxy_http_version 1.1;

    # }

    location /api/appointment/ {
        rewrite ^/api/appointment(/.*) $1 break;
        proxy_pass http://appointment:5005/;
    }

    location /api/appointment/socket.io {
        # rewrite ^/api/appointment/socket.io(/.*) $1 break;
        proxy_pass http://appointment:5005/socket.io/;

     }

    location /api/treatmentplan/ {
        rewrite ^/api/treatmentplan(/.*) $1 break;
        proxy_pass http://treatmentplan:5006/;

    }

    #
    location /api/notify/socket.io {
        # rewrite ^/api/pharmacy/socket.io(/.*) $1 break;
        proxy_pass http://notify/socket.io/;

     } 


    location /api/notify/ {
        rewrite ^/api/notify(/.*) $1 break;
        proxy_pass http://notify;

    }

    location /api/articles/ {
        rewrite ^/api/articles(/.*) $1 break;
        proxy_pass http://articles;

    }

    location /api/etl/ {
        rewrite ^/api/etl(/.*) $1 break;
        proxy_pass http://etl:8002/;

    }

    # 
    location /ws/ {
        proxy_pass http://etl:8002;  # WebSocket endpoint
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $remote_addr;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_cache_bypass $http_upgrade;

        # proxy_read_timeout 300;
        # proxy_connect_timeout 300;
        # proxy_send_timeout 300;
        # send_timeout 300;

        # proxy_buffers 8 32k;
        # proxy_buffer_size 64k;
        # proxy_busy_buffers_size 64k;

        # proxy_set_header 'Access-Control-Allow-Origin' '*';
    }


}
# }